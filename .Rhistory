bM ~ dnorm(0,1),
bSM ~ dnorm(0,1),
sigma ~ dunif(0,10)
),
data <- df)
# compare with and without interaction
compare(m1.2, m1.4)
?mtext
par(mfrow=c(1,2))
S.seq <- seq( from=-1.5, to=3, length.out=30 )
# compute counterfactual mean weight (mu)
mu.NotMENA <- link(m1.4, data=data.frame(MENA=0, SIGI_s=S.seq))
mu.NotMENA.mean <- apply(mu.NotMENA, 2, mean)
mu.NotMENA.PI <- apply(mu.NotMENA, 2, PI, prob=0.95)
mu.MENA <- link(m1.4, data=data.frame(MENA=1, SIGI_s=S.seq))
mu.MENA.mean <- apply(mu.MENA, 2, mean)
mu.MENA.PI <- apply(mu.MENA, 2, PI, prob=0.95)
# plot non-MENA nations with regression
d.M0 <- df[df$MENA==0,]
plot(log_GNI ~ SIGI_s, data=d.M0,
col=rangi2, ylab="log GNI per capita",
xlab="standardized SIGI")
mtext("Non-MENA nations", 3)
lines(S.seq, mu.NotMENA.mean, col=rangi2)
shade(mu.NotMENA.PI, S.seq, col=col.alpha(rangi2, 0.3))
# plot MENA nations with regression
d.M1 <- df[df$MENA==1,]
plot(log_GNI ~ SIGI_s, data=d.M1,
col="darkgreen", ylab="log GNI per capita",
xlab="standardized SIGI")
mtext("MENA nations", 3)
lines(S.seq, mu.MENA.mean, col="darkgreen")
shade(mu.MENA.PI, S.seq, col=col.alpha("darkgreen", 0.3))
par(mfrow=c(1,2))
S.seq <- seq( from=3, to=-1.5, length.out=30 )
# compute counterfactual mean weight (mu)
mu.NotMENA <- link(m1.4, data=data.frame(MENA=0, SIGI_s=S.seq))
mu.NotMENA.mean <- apply(mu.NotMENA, 2, mean)
mu.NotMENA.PI <- apply(mu.NotMENA, 2, PI, prob=0.95)
mu.MENA <- link(m1.4, data=data.frame(MENA=1, SIGI_s=S.seq))
mu.MENA.mean <- apply(mu.MENA, 2, mean)
mu.MENA.PI <- apply(mu.MENA, 2, PI, prob=0.95)
# plot non-MENA nations with regression
d.M0 <- df[df$MENA==0,]
plot(log_GNI ~ SIGI_s, data=d.M0,
col=rangi2, ylab="log GNI per capita",
xlab="standardized SIGI")
mtext("Non-MENA nations", 3)
lines(S.seq, mu.NotMENA.mean, col=rangi2)
shade(mu.NotMENA.PI, S.seq, col=col.alpha(rangi2, 0.3))
# plot MENA nations with regression
d.M1 <- df[df$MENA==1,]
plot(log_GNI ~ SIGI_s, data=d.M1,
col="darkgreen", ylab="log GNI per capita",
xlab="standardized SIGI")
mtext("MENA nations", 3)
lines(S.seq, mu.MENA.mean, col="darkgreen")
shade(mu.MENA.PI, S.seq, col=col.alpha("darkgreen", 0.3))
par(mfrow=c(1,2))
S.seq <- seq( from=-1.5, to=3, length.out=30)
# compute counterfactual mean weight (mu)
mu.NotMENA <- link(m1.4, data=data.frame(MENA=0, SIGI_s=S.seq))
mu.NotMENA.mean <- apply(mu.NotMENA, 2, mean)
mu.NotMENA.PI <- apply(mu.NotMENA, 2, PI, prob=0.95)
mu.MENA <- link(m1.4, data=data.frame(MENA=1, SIGI_s=S.seq))
mu.MENA.mean <- apply(mu.MENA, 2, mean)
mu.MENA.PI <- apply(mu.MENA, 2, PI, prob=0.95)
# plot non-MENA nations with regression
d.M0 <- df[df$MENA==0,]
plot(log_GNI ~ SIGI_s, data=d.M0,
col=rangi2, ylab="log GNI per capita",
xlab="standardized SIGI", xlim=c(3, -1.5))
mtext("Non-MENA nations", 3)
lines(S.seq, mu.NotMENA.mean, col=rangi2)
shade(mu.NotMENA.PI, S.seq, col=col.alpha(rangi2, 0.3))
# plot MENA nations with regression
d.M1 <- df[df$MENA==1,]
plot(log_GNI ~ SIGI_s, data=d.M1,
col="darkgreen", ylab="log GNI per capita",
xlab="standardized SIGI", xlim=c(3, -1.5))
mtext("MENA nations", 3)
lines(S.seq, mu.MENA.mean, col="darkgreen")
shade(mu.MENA.PI, S.seq, col=col.alpha("darkgreen", 0.3))
par(mfrow=c(1,2))
# counterfactual plot holding SIGI_s constant at its mean
# prepare new counterfactual data
S.avg <- mean(df$SIGI_s)
G.seq <- seq( from=-3, to=2, length.out=30 )
pred.dat <- data.frame(
GGI_s=G.seq,
SIGI_s=S.avg
)
## compute counterfactual mean weight (mu)
mu <- link(m1.3, data=pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI, prob=0.95)
## simulate counterfactual weight outcomes
G.sim <- sim( m1.3, data=pred.dat, n=1e4)
G.PI <- apply( G.sim, 2, PI)
## plot
plot(log_GNI ~ GGI_s, data=df, type="n", xlim=c(2, -3))
# read files
df = read.csv(file.path("datasets", "df.csv"))
df = df[ , c("log_GNI","GGI_s","SIGI_s","MENA")]
par(mfrow=c(1,2))
# counterfactual plot holding SIGI_s constant at its mean
# prepare new counterfactual data
S.avg <- mean(df$SIGI_s)
G.seq <- seq( from=-3, to=2, length.out=30 )
pred.dat <- data.frame(
GGI_s=G.seq,
SIGI_s=S.avg
)
## compute counterfactual mean weight (mu)
mu <- link(m1.3, data=pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI, prob=0.95)
## simulate counterfactual weight outcomes
G.sim <- sim( m1.3, data=pred.dat, n=1e4)
G.PI <- apply( G.sim, 2, PI)
## plot
plot(log_GNI ~ GGI_s, data=df, type="n", xlim=c(2, -3))
mtext("SIGI_s = 0")
lines(G.seq, mu.mean)
shade(mu.PI, G.seq)
shade(G.PI, G.seq)
# counterfactual plot holding SIGI_s constant at its mean
# prepare new counterfactual data
G.avg <- mean(df$GGI_s)
S.seq <- seq( from=-1.5, to=3, length.out=30 )
pred.dat <- data.frame(
SIGI_s=S.seq,
GGI_s=G.avg
)
## compute counterfactual mean weight (mu)
mu <- link(m1.3, data=pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI, prob=0.95)
## simulate counterfactual weight outcomes
S.sim <- sim( m1.3, data=pred.dat, n=1e4)
S.PI <- apply( S.sim, 2, PI)
## plot
plot(log_GNI ~ SIGI_s, data=df, type="n", xlim=c(3, -1.5))
mtext("GGI_s = 0")
lines(S.seq, mu.mean)
shade(mu.PI, S.seq)
shade(S.PI, S.seq)
par(mfrow=c(1,2))
# counterfactual plot holding SIGI_s constant at its mean
# prepare new counterfactual data
S.avg <- mean(df$SIGI_s)
G.seq <- seq( from=-3, to=2, length.out=30 )
pred.dat <- data.frame(
GGI_s=G.seq,
SIGI_s=S.avg
)
## compute counterfactual mean weight (mu)
mu <- link(m1.3, data=pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI, prob=0.95)
## simulate counterfactual weight outcomes
G.sim <- sim( m1.3, data=pred.dat, n=1e4)
G.PI <- apply( G.sim, 2, PI)
## plot
plot(log_GNI ~ GGI_s, data=df, type="n", xlim=c(2, -3))
mtext("SIGI_s = 0")
lines(G.seq, mu.mean)
shade(mu.PI, G.seq)
shade(G.PI, G.seq)
# counterfactual plot holding SIGI_s constant at its mean
# prepare new counterfactual data
G.avg <- mean(df$GGI_s)
S.seq <- seq( from=-1.5, to=3, length.out=30 )
pred.dat <- data.frame(
SIGI_s=S.seq,
GGI_s=G.avg
)
## compute counterfactual mean weight (mu)
mu <- link(m1.3, data=pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI, prob=0.95)
## simulate counterfactual weight outcomes
S.sim <- sim( m1.3, data=pred.dat, n=1e4)
S.PI <- apply( S.sim, 2, PI)
## plot
plot(log_GNI ~ SIGI_s, data=df, type="n", xlim=c(3, -1.5))
mtext("GGI_s = 0")
lines(S.seq, mu.mean)
shade(mu.PI, S.seq)
shade(S.PI, S.seq)
par(mfrow=c(1,2))
# counterfactual plot holding SIGI_s constant at its mean
# prepare new counterfactual data
S.avg <- mean(df$SIGI_s)
G.seq <- seq( from=-3, to=2, length.out=30 )
pred.dat <- data.frame(
GGI_s=G.seq,
SIGI_s=S.avg
)
## compute counterfactual mean weight (mu)
mu <- link(m1.3, data=pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI, prob=0.95)
## simulate counterfactual weight outcomes
G.sim <- sim( m1.3, data=pred.dat, n=1e4)
G.PI <- apply( G.sim, 2, PI)
## plot
plot(log_GNI ~ GGI_s, data=df, type="n")
mtext("SIGI_s = 0")
lines(G.seq, mu.mean)
shade(mu.PI, G.seq)
shade(G.PI, G.seq)
# counterfactual plot holding SIGI_s constant at its mean
# prepare new counterfactual data
G.avg <- mean(df$GGI_s)
S.seq <- seq( from=-1.5, to=3, length.out=30 )
pred.dat <- data.frame(
SIGI_s=S.seq,
GGI_s=G.avg
)
## compute counterfactual mean weight (mu)
mu <- link(m1.3, data=pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI, prob=0.95)
## simulate counterfactual weight outcomes
S.sim <- sim( m1.3, data=pred.dat, n=1e4)
S.PI <- apply( S.sim, 2, PI)
## plot
plot(log_GNI ~ SIGI_s, data=df, type="n")
mtext("GGI_s = 0")
lines(S.seq, mu.mean)
shade(mu.PI, S.seq)
shade(S.PI, S.seq)
par(mfrow=c(1,2))
S.seq <- seq( from=-1.5, to=3, length.out=30)
# compute counterfactual mean weight (mu)
mu.NotMENA <- link(m1.4, data=data.frame(MENA=0, SIGI_s=S.seq))
mu.NotMENA.mean <- apply(mu.NotMENA, 2, mean)
mu.NotMENA.PI <- apply(mu.NotMENA, 2, PI, prob=0.95)
mu.MENA <- link(m1.4, data=data.frame(MENA=1, SIGI_s=S.seq))
mu.MENA.mean <- apply(mu.MENA, 2, mean)
mu.MENA.PI <- apply(mu.MENA, 2, PI, prob=0.95)
# plot non-MENA nations with regression
d.M0 <- df[df$MENA==0,]
plot(log_GNI ~ SIGI_s, data=d.M0,
col=rangi2, ylab="log GNI per capita",
xlab="Gender Equality (reversed SIGI_s)", xlim=c(3, -1.5))
mtext("Non-MENA nations", 3)
lines(S.seq, mu.NotMENA.mean, col=rangi2)
shade(mu.NotMENA.PI, S.seq, col=col.alpha(rangi2, 0.3))
# plot MENA nations with regression
d.M1 <- df[df$MENA==1,]
plot(log_GNI ~ SIGI_s, data=d.M1,
col="darkgreen", ylab="log GNI per capita",
xlab="Gender Equality (reversed SIGI_s)", xlim=c(3, -1.5))
mtext("MENA nations", 3)
lines(S.seq, mu.MENA.mean, col="darkgreen")
shade(mu.MENA.PI, S.seq, col=col.alpha("darkgreen", 0.3))
library(DT)
library(readr)
library(rstan)
library(rethinking)
library(dplyr)
# read files
df = read.csv(file.path("datasets", "df.csv"))
# trim data frame
df = df[ , c("log_GNI","SIGI_s","MENA")]
class(df)
# define model fit by map
m1.4 <- map(
alist(
log_GNI ~ dnorm(mu, sigma),
mu <- a + bS*SIGI_s + bSM*SIGI_s*MENA + bM*MENA,
a ~ dnorm(8,100),
bS ~ dnorm(0,1),
bM ~ dnorm(0,1),
bSM ~ dnorm(0,1),
sigma ~ dunif(0,10)
),
data <- df)
# define model fit by map2stan
m1.4.stan <- map2stan(
alist(
log_GNI ~ dnorm(mu, sigma),
mu <- a + bS*SIGI_s + bSM*SIGI_s*MENA + bM*MENA,
a ~ dnorm(8,100),
bS ~ dnorm(0,1),
bM ~ dnorm(0,1),
bSM ~ dnorm(0,1),
sigma ~ dcauchy(0,2)
),
data <- df)
coeftab(m1.4, m1.4.stan)
pairs(m1.4.stan)
source('C:/Users/jestw/Desktop/QBS/QBS Individual_final/JCWebsite/build_site.R', echo=TRUE)
source('C:/Users/jestw/Desktop/QBS/QBS Individual_final/JCWebsite/build_site.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(DT)
library(readr)
library(rethinking)
library(dplyr)
# read files
df = read.csv(file.path("datasets", "df.csv"))
# trim data frame
df = df[ , c("log_GNI","GGI_s","SIGI_s","MENA")]
DT:::datatable(
df,
extensions = list("Scroller" = NULL,
'FixedHeader' = NULL,
"FixedColumns" = list(leftColumns=2)),
options = list(
deferRender = TRUE,
scrollY = 200,
scroller = TRUE,
autoWidth=TRUE,
pageLength = 50,
fixedHeader = TRUE,
dom = 't',
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)
)
)
# trim data frame
df = df[ , c("log_GNI","GGI_s","SIGI_s","MENA")]
DT:::datatable(
df,
extensions = list("Scroller" = NULL,
'FixedHeader' = NULL,
"FixedColumns" = list(leftColumns=2)),
options = list(
deferRender = TRUE,
scrollY = 200,
scroller = TRUE,
autoWidth=TRUE,
pageLength = 50,
fixedHeader = TRUE,
dom = 't',
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)
)
)
# define model fit by map
m1.1 <- map(
alist(
log_GNI ~ dnorm(mu, sigma),
mu <- a + bG*GGI_s,
a ~ dnorm(8,100),
bG ~ dnorm(0,1),
sigma ~ dunif(0,10)
),
data <- df)
# define model fit by map
m1.2 <- map(
alist(
log_GNI ~ dnorm(mu, sigma),
mu <- a + bS*SIGI_s,
a ~ dnorm(8,100),
bS ~ dnorm(0,1),
sigma ~ dunif(0,10)
),
data <- df)
# define model fit by map
m1.3 <- map(
alist(
log_GNI ~ dnorm(mu, sigma),
mu <- a + bG*GGI_s + bS*SIGI_s,
a ~ dnorm(8,100),
bG ~ dnorm(0,1),
bS ~ dnorm(0,1),
sigma ~ dunif(0,10)
),
data <- df)
# assess predictors across models
par(mfrow=c(3,1))
plot(precis(m1.1), main="Model 1.1")
plot(precis(m1.2), main="Model 1.2")
plot(precis(m1.3), main="Model 1.3")
par(mfrow=c(1,2))
# counterfactual plot holding SIGI_s constant at its mean
# prepare new counterfactual data
S.avg <- mean(df$SIGI_s)
G.seq <- seq( from=-3, to=2, length.out=30 )
pred.dat <- data.frame(
GGI_s=G.seq,
SIGI_s=S.avg
)
## compute counterfactual mean weight (mu)
mu <- link(m1.3, data=pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI, prob=0.95)
## simulate counterfactual weight outcomes
G.sim <- sim( m1.3, data=pred.dat, n=1e4)
G.PI <- apply( G.sim, 2, PI)
## plot
plot(log_GNI ~ GGI_s, data=df, type="n")
mtext("SIGI_s = 0")
lines(G.seq, mu.mean)
shade(mu.PI, G.seq)
shade(G.PI, G.seq)
# counterfactual plot holding SIGI_s constant at its mean
# prepare new counterfactual data
G.avg <- mean(df$GGI_s)
S.seq <- seq( from=-1.5, to=3, length.out=30 )
pred.dat <- data.frame(
SIGI_s=S.seq,
GGI_s=G.avg
)
## compute counterfactual mean weight (mu)
mu <- link(m1.3, data=pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI, prob=0.95)
## simulate counterfactual weight outcomes
S.sim <- sim( m1.3, data=pred.dat, n=1e4)
S.PI <- apply( S.sim, 2, PI)
## plot
plot(log_GNI ~ SIGI_s, data=df, type="n")
mtext("GGI_s = 0")
lines(S.seq, mu.mean)
shade(mu.PI, S.seq)
shade(S.PI, S.seq)
# trim data frame
df = as.data.frame(df[ , c("log_GNI","SIGI_s","MENA")])
DT:::datatable(
df,
extensions = list("Scroller" = NULL,
'FixedHeader' = NULL,
"FixedColumns" = list(leftColumns=2)),
options = list(
deferRender = TRUE,
scrollY = 200,
scroller = TRUE,
autoWidth=TRUE,
pageLength = 50,
fixedHeader = TRUE,
dom = 't',
scrollX = TRUE,
fixedColumns = list(leftColumns = 2)
)
)
# define model fit by map
m1.4 <- map(
alist(
log_GNI ~ dnorm(mu, sigma),
mu <- a + bS*SIGI_s + bSM*SIGI_s*MENA + bM*MENA,
a ~ dnorm(8,100),
bS ~ dnorm(0,1),
bM ~ dnorm(0,1),
bSM ~ dnorm(0,1),
sigma ~ dunif(0,10)
),
data <- df)
# compare with and without interaction
compare(m1.2, m1.4)
par(mfrow=c(1,2))
S.seq <- seq( from=-1.5, to=3, length.out=30)
# compute counterfactual mean weight (mu)
mu.NotMENA <- link(m1.4, data=data.frame(MENA=0, SIGI_s=S.seq))
mu.NotMENA.mean <- apply(mu.NotMENA, 2, mean)
mu.NotMENA.PI <- apply(mu.NotMENA, 2, PI, prob=0.95)
mu.MENA <- link(m1.4, data=data.frame(MENA=1, SIGI_s=S.seq))
mu.MENA.mean <- apply(mu.MENA, 2, mean)
mu.MENA.PI <- apply(mu.MENA, 2, PI, prob=0.95)
# plot non-MENA nations with regression
d.M0 <- df[df$MENA==0,]
plot(log_GNI ~ SIGI_s, data=d.M0,
col=rangi2, ylab="log GNI per capita",
xlab="Gender Equality (reversed SIGI_s)", xlim=c(3, -1.5))
mtext("Non-MENA nations", 3)
lines(S.seq, mu.NotMENA.mean, col=rangi2)
shade(mu.NotMENA.PI, S.seq, col=col.alpha(rangi2, 0.3))
# plot MENA nations with regression
d.M1 <- df[df$MENA==1,]
plot(log_GNI ~ SIGI_s, data=d.M1,
col="darkgreen", ylab="log GNI per capita",
xlab="Gender Equality (reversed SIGI_s)", xlim=c(3, -1.5))
mtext("MENA nations", 3)
lines(S.seq, mu.MENA.mean, col="darkgreen")
shade(mu.MENA.PI, S.seq, col=col.alpha("darkgreen", 0.3))
?write.csv
write.csv(df, file.path("datasets", "df_shiny.csv"))
df = read.csv(file.path("datasets", "df_shiny.csv"))
df = read.csv(file.path("datasets", "df_shiny.csv"))
View(df)
View(df)
m1.2 <- map(
alist(
log_GNI ~ dnorm(mu, sigma),
mu <- a + bS*SIGI_s,
a ~ dnorm(8,100),
bS ~ dnorm(0,1),
sigma ~ dunif(0,10)
),
data <- df)
m1.4 <- map(
alist(
log_GNI ~ dnorm(mu, sigma),
mu <- a + bS*SIGI_s + bSM*SIGI_s*MENA + bM*MENA,
a ~ dnorm(8,100),
bS ~ dnorm(0,1),
bM ~ dnorm(0,1),
bSM ~ dnorm(0,1),
sigma ~ dunif(0,10)
),
data <- df)
shiny::runApp('JCshiny')
runApp('JCshiny')
runApp('JCshiny')
runApp('Interaction')
rmarkdown::render_site()
rsconnect::showLogs()
setwd("C:/Users/jestw/Desktop/QBS/QBS Individual_final/JCWebsite/Interaction")
rsconnect::showLogs()
